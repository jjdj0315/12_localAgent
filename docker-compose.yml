version: '3.8'

services:
  postgres:
    image: postgres:15
    container_name: llm-webapp-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-llm_app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-llm_webapp}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-llm_app}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: llm-webapp-backend
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-llm_app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-llm_webapp}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      SESSION_TIMEOUT_MINUTES: ${SESSION_TIMEOUT_MINUTES:-30}
      LLM_SERVICE_URL: http://llm-service:8001
    volumes:
      - ./backend/app:/app/app
      - ./backend/alembic:/app/alembic
      - uploads_data:/uploads
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  llm-service:
    build:
      context: .
      dockerfile: docker/llm-service.Dockerfile
    container_name: llm-webapp-llm-service
    environment:
      MODEL_PATH: ${MODEL_PATH:-/models/llama-3-8b}
      MAX_MODEL_LEN: ${MAX_MODEL_LEN:-4096}
      GPU_MEMORY_UTILIZATION: ${GPU_MEMORY_UTILIZATION:-0.9}
      TENSOR_PARALLEL_SIZE: ${TENSOR_PARALLEL_SIZE:-1}
      MAX_NUM_SEQS: ${MAX_NUM_SEQS:-16}
    volumes:
      - ./models:/models:ro
      - ./llm-service:/app
    ports:
      - "8001:8001"
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: 1
              capabilities: [gpu]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    container_name: llm-webapp-frontend
    environment:
      NEXT_PUBLIC_API_URL: ${NEXT_PUBLIC_API_URL:-http://localhost:8000/api/v1}
    ports:
      - "3000:3000"
    depends_on:
      - backend
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:alpine
    container_name: llm-webapp-nginx
    volumes:
      - ./docker/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  uploads_data:

networks:
  default:
    name: llm-webapp-network
