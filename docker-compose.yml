services:
  postgres:
    image: postgres:15
    container_name: llm-webapp-postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-llm_app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-llm_webapp}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-llm_app}"]
      interval: 10s
      timeout: 5s
      retries: 5

  ollama:
    image: ollama/ollama:latest
    container_name: llm-webapp-ollama
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:11434/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    container_name: llm-webapp-backend
    environment:
      USE_SQLITE: "false"
      POSTGRES_USER: ${POSTGRES_USER:-llm_app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-llm_webapp}
      POSTGRES_HOST: postgres
      POSTGRES_PORT: 5432
      SECRET_KEY: ${SECRET_KEY:-your-secret-key-change-in-production}
      SESSION_TIMEOUT_MINUTES: ${SESSION_TIMEOUT_MINUTES:-30}
      LLM_SERVICE_URL: http://ollama:11434
      OLLAMA_MODEL: ${OLLAMA_MODEL:-tinyllama}
      PER_USER_QUOTA_GB: ${PER_USER_QUOTA_GB:-10}
      TOTAL_STORAGE_CAPACITY_GB: ${TOTAL_STORAGE_CAPACITY_GB:-500}
    volumes:
      - ./backend/app:/app/app
      - ./backend/alembic:/app/alembic
      - ./backend/scripts:/app/scripts
      - uploads_data:/uploads
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      ollama:
        condition: service_healthy
    command: >
      sh -c "
        echo 'Waiting for services...' &&
        sleep 5 &&
        echo 'Running database migrations...' &&
        alembic upgrade head &&
        echo 'Creating initial admin user...' &&
        python scripts/create_admin.py --username admin --password admin123! 2>/dev/null || true &&
        echo 'Pulling Ollama model (TinyLlama - 1.1B, CPU friendly)...' &&
        curl -X POST http://ollama:11434/api/pull -d '{\"name\": \"tinyllama\"}' &&
        echo 'Model download started. Waiting...' &&
        sleep 30 &&
        echo 'Starting backend server...' &&
        uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
      "

  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    container_name: llm-webapp-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000/api/v1
    ports:
      - "3000:3000"
    depends_on:
      - backend
    stdin_open: true
    tty: true

volumes:
  postgres_data:
  ollama_data:
  uploads_data:

networks:
  default:
    name: llm-webapp-network
