{
  "permissions": {
    "allow": [
      "Bash(timeout 5 python:*)",
      "Bash(timeout 10 python:*)",
      "Bash(timeout 15 python:*)",
      "Bash(npm --version)",
      "Bash(node --version)",
      "Bash(powershell:*)",
      "Bash(set SPECIFY_FEATURE_SLUG=001-local-llm-webapp)",
      "Bash(git -C \"C:\\02_practice\\12_localAgent\" branch --show-current)",
      "Bash(set SPECIFY_FEATURE=001-local-llm-webapp:*)",
      "Bash(git -C:*)",
      "Bash(test:*)",
      "Bash(docker-compose:*)",
      "Bash(npm install)",
      "Bash(docker ps:*)",
      "Bash(docker logs:*)",
      "Bash(curl:*)",
      "Bash(timeout 30 powershell:*)",
      "Bash(docker exec:*)",
      "Bash(docker:*)",
      "Bash(findstr:*)",
      "Bash(timeout 10 powershell:*)",
      "Bash(timeout 15 powershell:*)",
      "Bash(npm run build:*)",
      "Bash(Select-String -Pattern \"✓|Failed|Error:\" -CaseSensitive)",
      "Bash(timeout 20 powershell:*)",
      "Bash(timeout:*)",
      "Bash(dir:*)",
      "Bash(Select-String \"12_localagent-backend\")",
      "Bash(if not exist \"C:\\02_practice\\12_localAgent\\specs\\001-local-llm-webapp\\checklists\" mkdir \"C:\\02_practice\\12_localAgent\\specs\\001-local-llm-webapp\\checklists\")",
      "SlashCommand(/speckit.plan)",
      "Bash(if not exist .env copy .env.example .env)",
      "Bash(del \"C:\\02_practice\\12_localAgent\\docker\\vllm.Dockerfile\")",
      "SlashCommand(/speckit.specify 다음 기능들을 추가합니다:\n\n1. **세이프티 필터 (Safety Filter)**\n   - 사용자 질문(input)과 AI 응답(output) 모두에 대해 부적절한 내용 필터링\n   - 필터링 카테고리: 폭력성, 성적인 내용, 위험한 질문, 혐오 발언, 개인정보 유출\n   - 2단계 접근:\n     - Phase 1: 룰 기반 필터 (키워드 매칭, 정규식) - CPU 실행, 폐쇄망 지원\n     - Phase 2: 경량 분류 모델 (toxic-bert 등) - CPU 지원, 로컬 모델\n   - 필터링 결과: is_safe, categories, confidence, matched_patterns\n   - 부적절한 내용 감지 시 사전 정의된 안전 메시지로 대체\n   - 관리자가 필터링 규칙 커스터마이징 가능\n\n2. **ReAct 에이전트 (Reasoning and Acting Agent)**\n   - LLM이 단계별로 사고(Thought)하고 행동(Action)하는 패턴\n   - 구조: Thought → Action → Observation → Thought... → Final Answer\n   - **지자체 공무원용 도구 시스템 (폐쇄망 지원):**\n     - **문서 검색 도구**: 업로드된 내부 문서 검색 (법규, 조례, 매뉴얼)\n     - **계산기 도구**: 예산 계산, 통계 계산 (로컬 실행)\n     - **날짜/일정 도구**: 공휴일 확인, 기한 계산, 회계연도 계산\n     - **데이터 분석 도구**: CSV/Excel 데이터 요약 및 분석\n     - **문서 템플릿 도구**: 공문서, 보고서 양식 생성\n     - **법규 참조 도구**: 관련 법령/조례 인용 및 해석\n   - 최대 반복 횟수 제한 (기본 5회, 설정 가능)\n   - 도구 실행 이력 로깅 (감사 추적용)\n   - 에러 처리 및 fallback 메커니즘\n\n3. **멀티 에이전트 시스템 (Multi-Agent System)**\n   - 오케스트레이터(Orchestrator) 기반 태스크 분배\n   - **지자체 업무 특화 에이전트:**\n     - **민원 지원 에이전트**: 민원 질의 분석 및 답변 초안 작성\n     - **문서 작성 에이전트**: 공문서, 보고서, 안내문 초안 생성\n     - **법규 검색 에이전트**: 관련 법령/조례 검색 및 해석 지원\n     - **데이터 분석 에이전트**: 통계 데이터 분석 및 시각화 제안\n     - **검토 에이전트**: 작성된 문서의 오류 검토 및 개선 제안\n   - 태스크 자동 분류 및 라우팅 (룰 기반 + LLM 기반)\n   - 복잡한 업무는 여러 에이전트가 순차적으로 협업\n   - 각 에이전트의 작업 이력 및 결과 추적\n   - 에이전트 간 컨텍스트 공유\n\n**공통 요구사항 (폐쇄망 환경):**\n- 모든 기능은 외부 네트워크 없이 동작\n- 모든 모델과 데이터는 로컬에 저장\n- CPU 환경에서 실행 가능 (GPU 선택적)\n- 관리자가 도구 목록 및 에이전트 설정 관리 가능\n- 모든 작업 이력 로깅 (보안 감사용)\n- 개인정보 처리 시 자동 마스킹/익명화)",
      "Bash(sed:*)"
    ],
    "deny": [],
    "ask": []
  }
}
